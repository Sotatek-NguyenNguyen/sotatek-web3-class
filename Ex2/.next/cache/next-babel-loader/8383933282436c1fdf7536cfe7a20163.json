{"ast":null,"code":"var _jsxFileName = \"/Users/sotatek/Documents/Blockchain/web3/web3-react/example/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport { NoEthereumProviderError, UserRejectedRequestError as UserRejectedRequestErrorInjected } from '@web3-react/injected-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { formatEther } from '@ethersproject/units';\nimport { useEagerConnect, useInactiveListener } from '../hooks';\nimport { injected, walletconnect } from '../connectors';\nimport { Spinner } from '../components/Spinner';\nimport contrcABI from '../ABI/contractABI.json';\nvar ConnectorNames;\n\n(function (ConnectorNames) {\n  ConnectorNames[\"Injected\"] = \"Injected\";\n  ConnectorNames[\"Network\"] = \"Network\";\n  ConnectorNames[\"WalletConnect\"] = \"WalletConnect\";\n})(ConnectorNames || (ConnectorNames = {}));\n\nconst connectorsByName = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect\n};\n\nfunction getErrorMessage(error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.';\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\";\n  } else if (error instanceof UserRejectedRequestErrorInjected || error instanceof UserRejectedRequestErrorWalletConnect || error instanceof UserRejectedRequestErrorFrame) {\n    return 'Please authorize this website to access your Ethereum account.';\n  } else {\n    console.error(error);\n    return 'An unknown error occurred. Check the console for more details.';\n  }\n}\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nexport default function () {\n  return __jsx(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ChainId() {\n  const {\n    chainId\n  } = useWeb3React();\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Chain Id\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"chain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"\\u26D3\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, chainId !== null && chainId !== void 0 ? chainId : ''));\n}\n\nfunction BlockNumber() {\n  const {\n    chainId,\n    library\n  } = useWeb3React();\n  const [blockNumber, setBlockNumber] = React.useState();\n  React.useEffect(() => {\n    if (!!library) {\n      let stale = false;\n      library.getBlockNumber().then(blockNumber => {\n        if (!stale) {\n          setBlockNumber(blockNumber);\n        }\n      }).catch(() => {\n        if (!stale) {\n          setBlockNumber(null);\n        }\n      });\n\n      const updateBlockNumber = blockNumber => {\n        setBlockNumber(blockNumber);\n      };\n\n      library.on('block', updateBlockNumber);\n      return () => {\n        stale = true;\n        library.removeListener('block', updateBlockNumber);\n        setBlockNumber(undefined);\n      };\n    }\n  }, [library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Block Number\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"numbers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDD22\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, blockNumber === null ? 'Error' : blockNumber !== null && blockNumber !== void 0 ? blockNumber : ''));\n}\n\nfunction Account() {\n  const {\n    account\n  } = useWeb3React();\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, \"Account\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"robot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"\\uD83E\\uDD16\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, account === null ? '-' : account ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}` : ''));\n}\n\nfunction Balance() {\n  const {\n    account,\n    library,\n    chainId\n  } = useWeb3React();\n  const [balance, setBalance] = React.useState();\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n      library.getBalance(account).then(balance => {\n        if (!stale) {\n          setBalance(balance);\n        }\n      }).catch(() => {\n        if (!stale) {\n          setBalance(null);\n        }\n      });\n      return () => {\n        stale = true;\n        setBalance(undefined);\n      };\n    }\n  }, [account, library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, \"Balance\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"gold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCB0\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, balance === null ? 'Error' : balance ? `Îž${formatEther(balance)}` : ''));\n}\n\nfunction BalanceWETH() {\n  const {\n    account,\n    library,\n    chainId\n  } = useWeb3React();\n  const [balanceWETH, setBalanceWETH] = React.useState(); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  React.useEffect(async () => {\n    // listen for changes on an Ethereum address\n    console.log(`listening for Transfer...`); //const contract = await new Contract(\"0xc778417E063141139Fce010982780140Aa0cD5Ab\", contrcABI, library.getSigner())\n\n    const myContract = new library.Contract(contrcABI, \"0xc778417E063141139Fce010982780140Aa0cD5Ab\");\n    console.log(`listening for Transfer...`, myContract); // trigger the effect only on component mount\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, \"balanceWETH\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"gold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCB0\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, balanceWETH === null ? 'Error' : balanceWETH ? `Îž${formatEther(balanceWETH)}` : ''));\n}\n\nfunction Header() {\n  const {\n    active,\n    error\n  } = useWeb3React();\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    style: {\n      margin: '1rem',\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, active ? 'ðŸŸ¢' : error ? 'ðŸ”´' : 'ðŸŸ '), __jsx(\"h3\", {\n    style: {\n      display: 'grid',\n      gridGap: '1rem',\n      gridTemplateColumns: '1fr min-content 1fr',\n      maxWidth: '20rem',\n      lineHeight: '2rem',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, __jsx(ChainId, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }), __jsx(BlockNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }), __jsx(Account, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }), __jsx(Balance, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }), __jsx(BalanceWETH, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction App() {\n  const context = useWeb3React();\n  const {\n    connector,\n    library,\n    chainId,\n    account,\n    activate,\n    deactivate,\n    active,\n    error\n  } = context; // handle logic to recognize the connector currently being activated\n\n  const [activatingConnector, setActivatingConnector] = React.useState();\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]); // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n\n  const triedEager = useEagerConnect(); // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n\n  useInactiveListener(!triedEager || !!activatingConnector);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }), __jsx(\"hr\", {\n    style: {\n      margin: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      display: 'grid',\n      gridGap: '1rem',\n      gridTemplateColumns: '1fr 1fr',\n      maxWidth: '20rem',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }, Object.keys(connectorsByName).map(name => {\n    const currentConnector = connectorsByName[name];\n    const activating = currentConnector === activatingConnector;\n    const connected = currentConnector === connector;\n    const disabled = !triedEager || !!activatingConnector || connected || !!error;\n    return __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\n        cursor: disabled ? 'unset' : 'pointer',\n        position: 'relative'\n      },\n      disabled: disabled,\n      key: name,\n      onClick: () => {\n        setActivatingConnector(currentConnector);\n        activate(connectorsByName[name]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        color: 'black',\n        margin: '0 0 0 1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }, activating && __jsx(Spinner, {\n      color: 'black',\n      style: {\n        height: '25%',\n        marginLeft: '-1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 32\n      }\n    }), connected && __jsx(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 19\n      }\n    }, \"\\u2705\")), name);\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }\n  }, (active || error) && __jsx(\"button\", {\n    style: {\n      height: '3rem',\n      marginTop: '2rem',\n      borderRadius: '1rem',\n      borderColor: 'red',\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      deactivate();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  }, \"Deactivate\"), !!error && __jsx(\"h4\", {\n    style: {\n      marginTop: '1rem',\n      marginBottom: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  }, getErrorMessage(error))), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }\n  }, (active || error) && __jsx(\"input\", {\n    name: \"nnn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }), (active || error) && __jsx(\"button\", {\n    style: {\n      height: '3rem',\n      marginTop: '2rem',\n      borderRadius: '1rem',\n      borderColor: 'red',\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      deactivate();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }, \"Deposit\")));\n}","map":{"version":3,"sources":["/Users/sotatek/Documents/Blockchain/web3/web3-react/example/pages/index.tsx"],"names":["React","Web3ReactProvider","useWeb3React","UnsupportedChainIdError","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","UserRejectedRequestErrorFrame","Web3Provider","formatEther","useEagerConnect","useInactiveListener","injected","walletconnect","Spinner","contrcABI","ConnectorNames","connectorsByName","Injected","WalletConnect","getErrorMessage","error","console","getLibrary","provider","library","pollingInterval","ChainId","chainId","BlockNumber","blockNumber","setBlockNumber","useState","useEffect","stale","getBlockNumber","then","catch","updateBlockNumber","on","removeListener","undefined","Account","account","substring","length","Balance","balance","setBalance","getBalance","BalanceWETH","balanceWETH","setBalanceWETH","log","myContract","Contract","Header","active","margin","textAlign","display","gridGap","gridTemplateColumns","maxWidth","lineHeight","App","context","connector","activate","deactivate","activatingConnector","setActivatingConnector","triedEager","Object","keys","map","name","currentConnector","activating","connected","disabled","height","borderRadius","borderColor","cursor","position","top","left","alignItems","color","marginLeft","flexDirection","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { formatEther } from '@ethersproject/units'\n\nimport { useEagerConnect, useInactiveListener } from '../hooks'\nimport {\n  injected,\n  network,\n  walletconnect\n\n} from '../connectors'\nimport { Spinner } from '../components/Spinner'\nimport contrcABI from '../ABI/contractABI.json'\n\nenum ConnectorNames {\n  Injected = 'Injected',\n  Network = 'Network',\n  WalletConnect = 'WalletConnect'\n\n}\n\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect\n\n}\n\nfunction getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\"\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected ||\n    error instanceof UserRejectedRequestErrorWalletConnect ||\n    error instanceof UserRejectedRequestErrorFrame\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 12000\n  return library\n}\n\nexport default function() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  )\n}\n\nfunction ChainId() {\n  const { chainId } = useWeb3React()\n\n  return (\n    <>\n      <span>Chain Id</span>\n      <span role=\"img\" aria-label=\"chain\">\n        â›“\n      </span>\n      <span>{chainId ?? ''}</span>\n    </>\n  )\n}\n\nfunction BlockNumber() {\n  const { chainId, library } = useWeb3React()\n\n  const [blockNumber, setBlockNumber] = React.useState<number>()\n  React.useEffect((): any => {\n    if (!!library) {\n      let stale = false\n\n      library\n        .getBlockNumber()\n        .then((blockNumber: number) => {\n          if (!stale) {\n            setBlockNumber(blockNumber)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBlockNumber(null)\n          }\n        })\n\n      const updateBlockNumber = (blockNumber: number) => {\n        setBlockNumber(blockNumber)\n      }\n      library.on('block', updateBlockNumber)\n\n      return () => {\n        stale = true\n        library.removeListener('block', updateBlockNumber)\n        setBlockNumber(undefined)\n      }\n    }\n  }, [library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>Block Number</span>\n      <span role=\"img\" aria-label=\"numbers\">\n        ðŸ”¢\n      </span>\n      <span>{blockNumber === null ? 'Error' : blockNumber ?? ''}</span>\n    </>\n  )\n}\n\nfunction Account() {\n  const { account } = useWeb3React()\n\n  return (\n    <>\n      <span>Account</span>\n      <span role=\"img\" aria-label=\"robot\">\n        ðŸ¤–\n      </span>\n      <span>\n        {account === null\n          ? '-'\n          : account\n          ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n          : ''}\n      </span>\n    </>\n  )\n}\n\nfunction Balance() {\n  const { account, library, chainId } = useWeb3React()\n\n  const [balance, setBalance] = React.useState()\n  React.useEffect((): any => {\n    if (!!account && !!library) {\n      let stale = false\n\n      library\n        .getBalance(account)\n        .then((balance: any) => {\n          if (!stale) {\n            setBalance(balance)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBalance(null)\n          }\n        })\n\n      return () => {\n        stale = true\n        setBalance(undefined)\n      }\n    }\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>Balance</span>\n      <span role=\"img\" aria-label=\"gold\">\n        ðŸ’°\n      </span>\n      <span>{balance === null ? 'Error' : balance ? `Îž${formatEther(balance)}` : ''}</span>\n    </>\n  )\n}\n\nfunction BalanceWETH() {\n  const { account, library, chainId } = useWeb3React()\n  const [balanceWETH, setBalanceWETH] = React.useState()\n  // ensures refresh if referential identity of library doesn't change across chainIds\n\n  React.useEffect(async () => {\n    // listen for changes on an Ethereum address\n    console.log(`listening for Transfer...`)\n    //const contract = await new Contract(\"0xc778417E063141139Fce010982780140Aa0cD5Ab\", contrcABI, library.getSigner())\n    const myContract = new library.Contract(contrcABI, \"0xc778417E063141139Fce010982780140Aa0cD5Ab\");\n    console.log(`listening for Transfer...`, myContract)\n    // trigger the effect only on component mount\n  }, [])\n\n\n  return (\n    <>\n      <span>balanceWETH</span>\n      <span role=\"img\" aria-label=\"gold\">\n        ðŸ’°\n      </span>\n      <span>{balanceWETH === null ? 'Error' : balanceWETH ? `Îž${formatEther(balanceWETH)}` : ''}</span>\n    </>\n  )\n}\n\nfunction Header() {\n  const { active, error } = useWeb3React()\n\n  return (\n    <>\n      <h1 style={{ margin: '1rem', textAlign: 'right' }}>{active ? 'ðŸŸ¢' : error ? 'ðŸ”´' : 'ðŸŸ '}</h1>\n      <h3\n        style={{\n          display: 'grid',\n          gridGap: '1rem',\n          gridTemplateColumns: '1fr min-content 1fr',\n          maxWidth: '20rem',\n          lineHeight: '2rem',\n          margin: 'auto'\n        }}\n      >\n        <ChainId />\n        <BlockNumber />\n        <Account />\n        <Balance />\n        <BalanceWETH />\n\n      </h3>\n    </>\n  )\n}\n\nfunction App() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<any>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n    <>\n      <Header />\n      <hr style={{ margin: '2rem' }} />\n      <div\n        style={{\n          display: 'grid',\n          gridGap: '1rem',\n          gridTemplateColumns: '1fr 1fr',\n          maxWidth: '20rem',\n          margin: 'auto'\n        }}\n      >\n        {Object.keys(connectorsByName).map(name => {\n          const currentConnector = connectorsByName[name]\n          const activating = currentConnector === activatingConnector\n          const connected = currentConnector === connector\n          const disabled = !triedEager || !!activatingConnector || connected || !!error\n\n          return (\n            <button\n              style={{\n                height: '3rem',\n                borderRadius: '1rem',\n                borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\n                cursor: disabled ? 'unset' : 'pointer',\n                position: 'relative'\n              }}\n              disabled={disabled}\n              key={name}\n              onClick={() => {\n                setActivatingConnector(currentConnector)\n                activate(connectorsByName[name])\n              }}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: '0',\n                  left: '0',\n                  height: '100%',\n                  display: 'flex',\n                  alignItems: 'center',\n                  color: 'black',\n                  margin: '0 0 0 1rem'\n                }}\n              >\n                {activating && <Spinner color={'black'} style={{ height: '25%', marginLeft: '-1rem' }} />}\n                {connected && (\n                  <span role=\"img\" aria-label=\"check\">\n                    âœ…\n                  </span>\n                )}\n              </div>\n              {name}\n            </button>\n          )\n        })}\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        {(active || error) && (\n          <button\n            style={{\n              height: '3rem',\n              marginTop: '2rem',\n              borderRadius: '1rem',\n              borderColor: 'red',\n              cursor: 'pointer'\n            }}\n            onClick={() => {\n              deactivate()\n            }}\n          >\n            Deactivate\n          </button>\n        )}\n\n        {!!error && <h4 style={{ marginTop: '1rem', marginBottom: '0' }}>{getErrorMessage(error)}</h4>}\n      </div>\n\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n\n\n        {(active || error) && (\n            <input name=\"nnn\" />\n        )}\n\n        {(active || error) && (\n          <button\n            style={{\n              height: '3rem',\n              marginTop: '2rem',\n              borderRadius: '1rem',\n              borderColor: 'red',\n              cursor: 'pointer'\n            }}\n            onClick={() => {\n              deactivate()\n            }}\n          >\n            Deposit\n          </button>\n\n        )}\n\n      </div>\n\n\n\n\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}